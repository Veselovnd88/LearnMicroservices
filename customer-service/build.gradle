plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'com.google.cloud.tools.jib' version '3.3.2'
}

group = 'ru.veselov'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jib {
    from {
        image = 'eclipse-temurin:17.0.8_7-jre'
    }
    to {
        image= "veselovnikolay/$project.name:$version"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    implementation 'io.github.openfeign:feign-micrometer:12.4'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    // https://mvnrepository.com/artifact/io.zipkin.brave/brave-instrumentation-messaging
    implementation 'io.zipkin.brave:brave-instrumentation-messaging:5.16.0'
    // https://mvnrepository.com/artifact/io.zipkin.brave/brave-instrumentation-spring-rabbit
    implementation 'io.zipkin.brave:brave-instrumentation-spring-rabbit:5.16.0'




    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'

    implementation project(':clients-service')
    implementation project(':amqp')

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
